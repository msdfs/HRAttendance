
@{
    ViewBag.Title = "Index";
}
<style>
    .dataTables_wrapper {
        width: 100% !important;
    }

    .ui-timepicker-container {
        z-index: 1151 !important;
    }
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script src="~/Scripts/bootstrap.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>
<!-- Include Bootstrap Datepicker -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.min.js"></script>
<!-- Timepicker-->
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
<!-- MomemtJs-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous"></script>
<script src="~/Scripts/CustomObject/AttendanceRegisterViewModel.js"></script>
<!--data table-->

 
<script>
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [year, month, day].join('-');
    }
</script>
<style>
    .timepicker {
        z-index: 99999 !important;
    }
</style>
<script>

    var attendanceRegisterObj;
    $(document).ready(function () {
        $.noConflict();
        attendanceRegisterObj = new AttendanceRegisterViewModel('', '', '', '', '', '', '');
        var d = new Date().toLocaleDateString();
        var x = formatDate(d);
        //filp when at home
        d = moment(d).format('DD/MM/YYYY');
        $("#editCurrentDate").datepicker({ dateFormat: "mmm-dd-yyyy" }).datepicker("setDate", d);
        $("#start_Date").datepicker({ dateFormat: "DD/MM/YYYY" }).datepicker();
        $("#endDate").datepicker({ dateFormat: "DD/MM/YYYY" }).datepicker();


        
        $('#tableTakenLeave').addClass("hidden");
        $('.mydate').timepicker({
            timeFormat: 'h:mm p',
            interval: 60,
            minTime: '4',
            maxTime: '6:00pm',
            // defaultTime: '7',
            startTime: '04:00',
            dynamic: false,
            dropdown: true,
            scrollbar: true
        });
       
        //$('#edittxtTimeIn').datepicker({
        //    dateFormat: '',
        //    timeFormat: 'hh:mm tt',
        //    interval: 60,
        //    minTime: '4',
        //    maxTime: '6:00pm',
        //    // defaultTime: '7',
        //    startTime: '04:00',
        //    dynamic: false,
        //    dropdown: true,
        //    scrollbar: true
        //});
        $('#edittxtTimeIn').timepicker({
            timeFormat: 'h:mm p',
            interval: 60,
            minTime: '4',
            maxTime: '6:00pm',
            // defaultTime: '7',
            startTime: '04:00',
            dynamic: true,
            dropdown: true,
            scrollbar: true
        });
        // $('#edittxtTimeIn').css('z-index',999999999);


        //load employees
        getEmployees();
        //load leave types
        getAllLeaveTypes();

        //load attendance
        //loadAttendanceRegister();
        $("#divRadio :input").change(function () {
            console.log(this);
            let id = $(this).attr("id");
            if (id ==='option_a2') {
                //show taken leave --divTakenLeave
                if ($("#divTakenLeave").hasClass("hidden")) {

                    $("#divTakenLeave").removeClass("hidden").addClass("show");
                    $("#divAttendance").removeClass("show").addClass("hidden");
                }
                
            } else {
                 //show attendance --divAttendance
                $("#divTakenLeave").removeClass("show").addClass("hidden");
                $("#divAttendance").removeClass("hidden").addClass("show");
                
            }
           
        });
        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
        });
        //attendance register datatable
        debugger;
        var table = $('#table_id').DataTable({
            "ajax": {
                "url": "/AttendanceRegister/GetAttendanceRegisterList",
                "type": "GET",
                "datatype": "json"
            },
            "order": [[0, "desc"]],
            "columns": [
                { "data": "AttendanceID" },
                { "data": "EmployeeFullName" },
                { "data": "EmployeeID" },
               // { "data": "AttendanceDate" },
                {
                    "data": "AttendanceDate",
                    "render": function (data) {
                       //return data;
                       //return moment(data).format('dddd, Do MMMM  YYYY');
                        return moment(data).format('DD-MMMM-YYYY');
                    }
                },
                { "data": "TimeIn" },
                { "data": "TimeOut" },
                { "data": "Absent" },

                {
                    'data': null,
                    className: 'center',
                    // defaultContent: '<a id="lnkEdit" href="" class="editor_edit">Edit</a> / <a href="" class="editor_remove">Delete</a>'
                    //defaultContent: '<button id="lnkEdit" type="button" class="btn btn-primary">Edit</button>'
                    'render': function (data, type, row) {
                      

                        if (row.Absent =='Present') {

                            return '<button type="button" class="btn btn-primary" id="' + row.AttendanceID + '" class="dodo" onclick="attendanceRegisterObj.editClick(this)">Edit </button>'

                        } else {
                            return ''; 

                        }
                    }
                },
                {
                    'data': null,
                    className: 'center',
                    // defaultContent: '<a id="lnkEdit" href="" class="editor_edit">Edit</a> / <a href="" class="editor_remove">Delete</a>'
                    'render': function (data, type, row) {
                        return '<button type="button" class="btn btn-danger" id="' + row.AttendanceID + '" class="dodo" onclick="attendanceRegisterObj.deleteClick(this)">Delete </button>'

                    }
                }
            ],
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                },
                {
                    "targets": [2],
                    "visible": false
                }
            ],

            "language": {
                infoEmpty: "No Data"
            }
        });

        var table2 = $('#tableTakenLeave').DataTable({
            "ajax": {
                "url": "/TakenLeave/GetData",
                "type": "GET",
                "datatype": "json",
               
            },
            "order": [[0, "desc"]],
            "columns": [
                { "data": "EmployeeFullName" },
                { "data": "TakenLeaveID", "visible": false },
               
                { "data": "LeaveName" },
                { "data": "LeaveTypeID", "visible": false},
                { "data": "EMP_ID", "visible": false},
                {
                    "data": "start_date",
                    "render": function (data) {
                        return moment(data).format('DD-MMMM-YYYY');
                       // return moment(data).format('DD-MMM-YYYY');
                    }
                },
                {
                    "data": "end_date",
                    "render": function (data) {
                        return moment(data).format('dddd, Do MMMM  YYYY');
                    }
                },
                {
                    "data": "LeaveDate",
                    "render": function (data) {
                        return moment(data).format('dddd, Do MMMM  YYYY');
                    }
                },
               
                {
                    'data': null,
                    className: 'center',
                    // defaultContent: '<a id="lnkEdit" href="" class="editor_edit">Edit</a> / <a href="" class="editor_remove">Delete</a>'
                    //defaultContent: '<button id="lnkEdit" type="button" class="btn btn-primary">Edit</button>'
                    'render': function (data, type, row) {
                        return '';
                       // return '<button type="button" class="btn btn-primary" id="' + row.TakenLeaveID + '" class="dodo" onclick="attendanceRegisterObj.editClick(this)">Edit </button>'
                    }
                },
                {
                    'data': null,
                    className: 'center',
                    // defaultContent: '<a id="lnkEdit" href="" class="editor_edit">Edit</a> / <a href="" class="editor_remove">Delete</a>'
                    'render': function (data, type, row) {
                       //return '<button type="button" class="btn btn-danger" id="' + row.TakenLeaveID + '" class="dodo" onclick="attendanceRegisterObj.deleteClick(this)">Delete </button>'
                      //  return '<button type="button" class="btn btn-danger" id="' + row.TakenLeaveID + '" class="dodo" onclick="attendanceRegisterObj.deleteTakenLeaveClick(this)">Delete </button>'
                        return '';
                    }
                }
            ],
            //"columnDefs": [
            //    {
            //        "targets": [0],
            //        "visible": false,
            //        "searchable": false
            //    },
            //    {
            //        "targets": [2],
            //        "visible": false
            //    }
            //],

            "language": {
                infoEmpty: "No Data"
            }
        });
        //taken leave data table
       
        //button click
        $("#btnSubmit").click(function () {
            //  submitForm();
            $('#btnSubmit').attr("disabled", true);
            attendanceRegisterObj.createAttendanceRegisterItem(attendanceRegisterObj);
            //  $(this).attr("disabled", false);
            $('#btnSubmit').attr("disabled", false);
            //$('#btnSubmit').removeAttr("disabled");
        });
        function setErrorMessage(message) {
            $("#errorSpan").text(message).fadeIn('slow').delay(5000).fadeOut('slow');
        };
        function validateEditForm(employeeID, timeIn, timeOut, leaveTypeID, attendanceDate) {
            let validate = true;
            debugger;
            let isDateValid = moment(attendanceDate, 'MM/DD/YYYY', true);
            if ((isDateValid.isValid() == false)) {
                validate = false;
                setErrorMessage('Invalid date in attendance date1');
                return validate;
            }
            if (employeeID < 1) {
                validate = false;
                setErrorMessage('Please Select an Employee');
                return validate;

            }
            let isTimeInValid = moment(timeIn, 'hh:mm');
            if (isTimeInValid.isValid() == false) {
                validate = false;
                setErrorMessage('Please Enter a value for Time In');
                return validate;
            }
            let isTimeOutValid = moment(timeOut, 'hh:mm A')
            if (isTimeOutValid.isValid() == false) {
                validate = false;
                setErrorMessage('Please Enter a value for Time Out');
                return validate;
            }
            let _timeIn = moment(timeIn, 'HH:mm A');
            let _timeOut = moment(timeOut, 'HH:mm A');
            if (moment(_timeIn).isSameOrAfter(_timeOut) == true) {
                validate = false;
                setErrorMessage('Time In Cannot be the same or greater than time out');
                return validate;
            }
            //if (timeIn) {
            //    validate = false;
            //    showToast('Please Enter a value for Time In');
            //    return validate;
            //} else {

            //}
            //if (timeOut) {
            //    validate = false;
            //    showToast('Please Enter a value for Time Out');
            //    return validate;
            //} else {
            //    //time out has value

            //}


            return validate;
        };
        //checkbox
        $('#chkAbsent').change(function () {
            if (this.checked) {
                var returnVal = confirm("Are you sure?");
                if (returnVal) {
                    $("#divAbsent").fadeIn("slow").show();
                    $("#divAttendanceTime").fadeOut("slow").hide();
                    //set the time and time out
                    $("#txtTimeIn").val("8:00 AM")
                    $("#txtTimeOut").val("4:00 PM")
                } else {
                    $("#divAbsent").fadeOut("slow").hide();
                    $("#divAttendanceTime").fadeIn("slow").show();
                    $(this).prop("checked", false);
                    //$(this).removeAttr('checked')    
                }
               
            } else {
                $("#divAbsent").fadeOut("slow").hide();
                $("#divAttendanceTime").fadeIn("slow").show();
                $(this).prop("checked", false);
            }

        });
        //update records
        $("#btnSaveEdit").click(function () {
            //  submitForm();
            // alert('Hello')

            attendanceRegisterObj.getEditFormValues();
            debugger;
            if (validateEditForm(attendanceRegisterObj.EmployeeID
                , attendanceRegisterObj.TimeIn
                , attendanceRegisterObj.TimeOut
               , ''
                , attendanceRegisterObj.CurrentDate, attendanceRegisterObj.notes) == true) {

                $.ajax({
                    type: "POST",
                    url: "/AttendanceRegister/UpdateAttendance",
                    data: JSON.stringify({
                        "employeeID": attendanceRegisterObj.EmployeeID,
                        "timeIn": attendanceRegisterObj.TimeIn,
                        "timeOut": attendanceRegisterObj.TimeOut,
                       // "leaveType": attendanceRegisterObj.LeaveType,
                        "attendanceID": attendanceRegisterObj.AttendanceID,
                        "attendanceDate": moment(attendanceRegisterObj.CurrentDate).format('DD-MMM-YYYY'),
                        "note": attendanceRegisterObj.notes
                    }),
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    async: true,
                    success: function (response) {
                        //clear form
                        debugger;
                        // alert("Success");
                        console.log(response);
                        //reload table
                        if (response.success) {
                            // showToast('Record was Updated');
                            $('#table_id').DataTable().ajax.reload();
                            $('#tableTakenLeave').DataTable().ajax.reload();
                            setErrorMessage('Record was Updated');
                        } else {
                            //showToast(response.data);
                            setErrorMessage(response.data);
                        }
                        //table.reload();
                        //reload table
                        // $("#table_id").data.reload();
                        $('#table_id').DataTable().ajax.reload()
                        //clear form
                        //clear attdenance hidden field
                    },
                    error: function (data) {
                        console.log("Something went wrong. ", 3000, 'rounded', data);

                        alert('Something went wrong');

                    }
                });
            }
            else {

            }
        });
        $("#btnClearAll").click(function () {
            showToast('Clear all clicked');

        });
        $("#btnUpdate").click(function () {
            showToast('Update clicked');

        });
        //on edit modal show
        $('#editModal').on('shown.bs.modal', function () {
            console.log('Peaches');

            //get data from db
            // attendanceRegisterObj.getAttendanceRecForModal();
        })
        //load edit


    });

</script>
<script>
    function clearEditForm() {
        $("#attendanceID").val('');
        $("#start_Date").val('');
        $("#ddlEmployee").val(0);
        $("#txtTimeIn").val('');
        $("#txtTimeOut").val('');
        $("#txtTimeOut").val('');;
    }
    function loadEdit(obj) {
        clearEditForm();
        debugger;
        if (obj.AttendanceDate) {
            var date = new Date(parseInt(obj.AttendanceDate.substr(6)));
            const AttendanceDate = moment(date).format('MM/DD/YYYY');
            $("#editCurrentDate").val(AttendanceDate);
        }
        $("#hdnAttendanceID").val(obj.AttendanceID);

        $('#editddlEmployee').val(obj.Emp_Id);// ("#ddlEmployee").val();
        //time out
        if (obj.TimeIN) {
            //moment(obj.TimeIN).format('hh:mm a')
            var timeIn = moment(obj.TimeIN).format("hh:mm a");
            $("#edittxtTimeIn").val(timeIn);
        }
        if (obj.TimeOUT) {
            var timeOut = moment(obj.TimeOUT).format("hh:mm a");
            // var timeOut = moment(obj.TimeOUT).format('H:mm a');
            $("#edittxtTimeOut").val(timeOut);
        }
        //if (obj.AttendLeaveID) {
        //    $("#editddlLeaveType").val(obj.AttendLeaveID).change();
        //}
        $("#editComment").val(obj.note);

    };
    function getEmployees() {
        $.ajax({
            type: "GET",
            url: "/Employee/GetEmployees",

            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                //reload data table
                // alert('sucess');
                var s = '<option value="0">Please Select an Employee</option>';
                debugger;
                var select = $("#ddlEmployee").empty();
                var selectEdit = $("#editddlEmployee").empty();
                console.log(data.data);
                debugger;
                $("#ddlEmployee").append('<option value="0">'
                    + 'Select An Employee'
                    + '</option>');
                $("#editddlEmployee").append('<option value="0">'
                    + 'Select An Employee'
                    + '</option>');
                $.each(data.data, function (index, value) {


                    select.append('<option value="'
                        + value.EmployeeID
                        + '">'
                        + value.FirstName + ' ' + value.LastName
                        + '</option>');
                });
                //modal

                $.each(data.data, function (index, value) {


                    selectEdit.append('<option value="'
                        + value.EmployeeID
                        + '">'
                        + value.FirstName + ' ' + value.LastName
                        + '</option>');
                });

                // $("#ddlEmployee option").eq(1).before($("<option>Select</option>").val(val).html(text));

            },
            error: function (data) {
                console.log("Something went wrong. ", 3000, 'rounded', data);

                showToast('Something went wrong');

            }
        });
    }
    function loadEmployeesIntoDDl(data) {
        var select = $("#ddlEmployee").empty();
        var selectEdit = $("#editddlEmployee").empty();
        console.log(data);
        debugger;
        $("#ddlEmployee").append('<option value="0">'
            + 'Select A Leave Type'
            + '</option>');
        $("#editddlEmployee").append('<option value="0">'
            + 'Select A Leave Type'
            + '</option>');

        $.each(data.data, function (index, value) {


            select.append('<option value="'
                + value.LeaveTypeID
                + '">'
                + value.LeaveType
                + '</option>');
        });
        $.each(data.data, function (index, value) {


            selectEdit.append('<option value="'
                + value.LeaveTypeID
                + '">'
                + value.LeaveType
                + '</option>');
        });

    }
    function loadLeaveTypesintoDDL(data) {
        debugger;
        var select = $("#ddlLeaveType").empty();
      //  var selectEdit = $("#editddlLeaveType").empty();

        select.append('<option value="0">'
            + 'Select A Leave Type'
            + '</option>');
        //selectEdit.append('<option value="0">'
        //    + 'Select A Leave Type'
        //    + '</option>');
        $.each(data.data, function (i, item) {
            select.append('<option value="'
                + item.LeaveTypeID
                + '">'
                + item.LeaveType
                + '</option>');
        });
        //modal
        //$.each(data.data, function (i, item) {
        //    selectEdit.append('<option value="'
        //        + item.LeaveTypeID
        //        + '">'
        //        + item.LeaveType
        //        + '</option>');
        //});
    }
    function getAllLeaveTypes() {
        $.ajax({
            type: "GET",
            url: "/LeaveTypes/GetLeaveTypes",

            type: "GET",
            datatype: "json",

            success: function (data) {
                //reload data table
                debugger;
                // alert('Leave Types');
                loadLeaveTypesintoDDL(data);
            },
            error: function (data) {
                console.log("Something went wrong. ", 3000, 'rounded', data);

                alert('Something went wrong--Leave Type did not load');

            }
        });
    }
    //function editClick(obj) {
    //    //var rowID = $(obj).attr('id');
    //    //showToast(rowID+ ' edit');
    //}

    //function deleteClick(obj) {
    //    var rowID = $(obj).attr('id');
    //    debugger;
    //    $.ajax({
    //        type: "POST",
    //        url: "/AttendanceRegister/DeleteRecord",
    //        data: JSON.stringify({
    //            "id": rowID
    //        }),
    //        dataType: 'json',
    //        contentType: 'application/json; charset=utf-8',



    //        success: function (response) {
    //            //reload data table
    //            // debugger;
    //            console.log('Attendance data', response);
    //            // alert('attendance success');
    //            //loadLeaveTypesintoDDL(data);

    //            if (response.success) {
    //                $('#table_id').DataTable().ajax.reload();
    //                showToast('Record was Deleted');
    //            } else {
    //                showToast(response.data);
    //            }
    //        },
    //        error: function (err) {
    //            console.log("Something went wrong. ", 3000, 'rounded', err.data);

    //            alert('Something went wrong--attendance did not load');

    //        }
    //    });


    //}
    //function loadAttendanceRegister() {
    //    $.ajax({
    //        type: "GET",
    //        url: "/AttendanceRegister/GetAttendanceRegisterList",

    //        type: "GET",
    //        datatype: "json",

    //        success: function (response) {
    //            //reload data table
    //            // debugger;
    //            console.log('Attendance data', response);
    //           // alert('attendance success');
    //            //loadLeaveTypesintoDDL(data);

    //            if (response.success) {
    //               // showToast('Record was Created');
    //                loadForm(response.data);
    //            } else {
    //                showToast(response.data);
    //            }
    //        },
    //        error: function (err) {
    //            console.log("Something went wrong. ", 3000, 'rounded', err.data);

    //            alert('Something went wrong--attendance did not load');

    //        }
    //    });
    //}
    function updateBtnClick() {
        debugger;
        //let attendanceID = $("#attendanceID").val();
        //let attendanceDate = $("#start_Date").val();
        //let employeeID = $("#ddlEmployee").val();
        //let timeIn = $("#txtTimeIn").val();
        //let timeOut = $("#txtTimeOut").val();
        //let leaveType= $("#txtTimeOut").val();;
        //if (attendanceID) {
        //    //validate then update the form
        //    if (attendanceRegisterObj.validateForm(employeeID, timeIn, timeOut, leaveType, attendanceID, attendanceDate)) {
        //        //update the form
        //        attendanceRegisterObj.updateAttendanceRegister();
        //    }

        //}
    }
    function loadForm(obj) {
        debugger;
        $("#attendanceID").val(obj.AttendanceID);
        $('#ddlEmployee').val(obj.Emp_Id);// ("#ddlEmployee").val();
        let timein = obj.TimeIN;
        let timeOut = obj.TimeOut;
        let _currentdate = obj.start_Date;
        let _endDate = obj._endDate;
        let notes = obj.notes;

        timein = moment.utc(obj.TimeIN).format("HH:mm A");
        timeOut = moment.utc(obj.TimeOut).format("HH:mm A");
        _currentdate = moment.utc(obj.AttendanceDate).format("DD/MM/yyyy");
        _endDate = moment.utc(obj._endDate).format("DD/MM/yyyy");
        $("#txtTimeIn").val(timein);
        $("#txtTimeOut").val(timeOut);
        $("#ddlLeaveType").val(obj.leaveType);
        $("#start_Date").val(_currentdate);
        $("#endDate").val(_endDate);
        $("#comments").val(notes);

    }
    function SaveEmployee() {

        $.ajax({
            type: "POST",
            url: "/AttendanceRegister/GetAttendanceRegisterList",

            data: '{ categories : ' + JSON.stringify(CategoryOrderModel) + '}',
            datatype: "json",

            success: function (response) {
                //reload data table
                // debugger;
                console.log('Attendance data', response);
                // alert('attendance success');
                //loadLeaveTypesintoDDL(data);

                if (response.success) {
                    //  showToast('Record was Created');

                } else {
                    showToast(response.data);
                }
            },
            error: function (err) {
                console.log("Something went wrong. ", 3000, 'rounded', err.data);

                alert('Something went wrong--attendance did not load');

            }
        });
    }

    //function validateForm(employeeID, timeIn, timeOut, leaveTypeID,attendanceDate) {

    //    let validate = true;
    //    if (employeeID < 1) {
    //        validate = false;
    //        showToast('Please Select an Employee');
    //        return validate;

    //    }
    //    if (timeIn) {
    //        validate = false;
    //        showToast('Please Enter a value for Time In');
    //        return validate;
    //    } else {

    //    }
    //    if (timeOut) {
    //        validate = false;
    //        showToast('Please Enter a value for Time Out');
    //        return validate;
    //    } else {
    //        //time out has value

    //    }


    //    return validate;


    //}

    function showToast(message) {
        $(".modal-header").first().text("Alert").css("font-weight", "bold");
        $(".modal-body").first().text(message).css("font-weight", "bold");

        $('#myModal').modal('show');
    }

</script>
<h2>AttendanceRegister</h2>

<div class="col-md-12">
    <form class="form-horizontal">
        <div class="row mt-2">
            <div class="form-group col-md-4">
                <div>
                    <label for="ddlEmployee">Select Employee </label>
                    <select class="form-control" id="ddlEmployee" name="ddlEmployee">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                    </select>
                </div>



            </div>
        </div>
      
        <div class="row-cols-8">
            <div class="cols-md-8 form-group  ">
                <div class="form-check form-check-inline ">

                    <label class="form-check-label font-weight-bold mr-4 " for="chkAbsent">
                        Is the Employee Absent?

                    </label>
                    <input class="form-check-input" type="checkbox" value="" id="chkAbsent">
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-4">
                <label for="ddlEmployee">Start Date </label>
                <input type='text' class="form-control" id='start_Date' name="start_Date" />
            </div>


            <div class="col-md-8" style="display:none" id="divAbsent">

                <div class="row">
                    <div class="col-md-4">
                        <label for="ddlEmployee">End Date </label>
                        <input type='text' class="form-control" id='endDate' name="endDate" />
                    </div>
                    <div class="col-md-4">
                        <label for="ddlLeaveType"> Leave Type </label>
                        <select class="form-control" id="ddlLeaveType">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                        </select>
                    </div>


                </div>




            </div>


        </div>

        <div class="row"  id="divAttendanceTime">
            <div class="form-group col-md-4">
                <label for="exampleInputEmail1">Time In</label>
                <input type="text" class="form-control mydate" id="txtTimeIn" aria-describedby="Time in" placeholder="Enter Employee Time in">
                @*<small id="emailHelp" class="form-text text-muted">Enter the Time-in for the employee.</small>*@
            </div>
            <div class="form-group col-md-4">
                <label for="exampleInputEmail1">Time out</label>
                <input type="text" class="form-control mydate" id="txtTimeOut" aria-describedby="timeout" placeholder="Enter Employee Time out">
            </div>


        </div>
        <div class=" row">
            <div class="form-group col-10">
                <label for="Note">Note </label>
                <textarea class="form-control" rows="5" cols="10" id="comments"></textarea>
            </div>


        </div>
        <style>
            #action-buttons {
                width: 50%;
                display: grid;
                grid-template-columns: 1fr 1fr 1fr;
                align-items: center;
                margin: 50px 0px;
            }
        </style>

        <br />

        <div class="row">
            <div id="action-buttons">
                <div class="col-sm-3 text-center">
                    <button id="btnSubmit" type="button" class="btn btn-primary">Submit</button>
                </div>
                <div>
                    <button id="btnUpdateRecord" style="display:none" onclick="updateBtnClick()" type="button" class="btn btn-primary">Update</button>
                </div>
                <div>
                    <button id="btnClearAll" type="button" class="btn btn-info">Clear Data</button>
                </div>

            </div>
        </div>
        <input type="hidden" name="attendanceID" id="attendanceID" value="" />
    </form>
    <div class="btn-group btn-group-toggle" data-toggle="buttons" id="divRadio" >
        <label class="btn btn-secondary">
            <input type="radio" name="options" id="option_a1" autocomplete="off" checked=""> Attendance
        </label>
        <label class="btn btn-secondary">
            <input type="radio" name="options" id="option_a2" autocomplete="off"> Taken Leave
        </label>
        
    </div>
<hr />
    <style>
        .hidden > div {
            display: none;
        }

        .visible > div {
            display: block;
        }
    </style>
    <div class="row" id="divAttendance">
        <table id="table_id" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>AttendanceID</th>
                    <th>Employee</th>
                    <th>EmployeeID</th>
                    <th>AttendanceDate</th>
                    <th>Time In </th>
                    <th>Time Out</th>
                    <th>In Office? </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>


            </tbody>
        </table>
    </div>
  
    <div class="row" id=divTakenLeave" >
        <table id="tableTakenLeave" class="display table" style="width:100%">
            <thead>
                <tr>
                    <th>EmployeeFullName </th>
                    <th>TakenLeaveID</th>
                    <th>LeaveName</th>
                    <th>LeaveTypeID</th>
                    <th>EMP_ID</th>


                    <th>Startdate</th>
                    <th>End Date </th>

                    <th>LeaveDate </th>

                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>                    
                    <td></td>
                    <td></td>
                    <td></td>

                    <td></td>
                    <td></td>
                    
                    <td></td>
                    <td></td>
                    
                    <td></td>
                    <td></td>
                </tr>


            </tbody>
        </table>
    </div>



</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body">
                <p>Some text in the modal.</p>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="editModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <input type="hidden" id="hdnAttendanceID" name="hdnAttendanceID" value="" />
                @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body">
                <div class="form-group col-md-8">
                    <label for="editddlEmployee">Date </label>
                    <input type='text' class="form-control" id='editCurrentDate' name="editCurrentDate" />
                </div>

                <div class="form-group col-md-8">
                    <label for="ddlEmployee">Select Employee </label>
                    <div class="col-xs-8">
                        <select class="form-control" id="editddlEmployee" name="editddlEmployee">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                        </select>
                    </div>

                </div>

                <div class="form-group col-md-8">
                    <label for="exampleInputEmail1">Time In</label>
                    <input type="text" class="form-control mydate" id="edittxtTimeIn" aria-describedby="Time in" placeholder="Enter Employee Time in">
                    @*<small id="emailHelp" class="form-text text-muted">Enter the Time-in for the employee.</small>*@
                </div>
                <div class="form-group col-md-8">
                    <label for="exampleInputEmail1">Time out</label>

                    <input type="text" class="form-control mydate" id="edittxtTimeOut" aria-describedby="timeout" placeholder="Enter Employee Time out">

                </div>
                <div class="form-group col-md-8" style="display:none">
                    <label for="editddlLeaveType">Select Leave Type </label>
                    <select class="form-control" id="editddlLeaveType">
                        <option>1</option>
                        <option>2</option>
                        <option>3</option>
                        <option>4</option>
                        <option>5</option>
                    </select>
                </div>
                <div class="form-group col-md-8">
                    <label for="">Comments </label>
                    <textarea class="form-control" id="editComment" name="editComment" rows="3" placeholder="Enter Comments">

                    </textarea>
                </div>
                <div class="form-group col-md-8">
                    <div class="card card-body bg-light" id="errorSpan" style="display:none;font-weight:bold;color:red">

                    </div>

                </div>
            </div>

            <div class="modal-footer">
                <button type="button" id="btnSaveEdit" class="btn btn-default">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

